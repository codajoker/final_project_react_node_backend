{
    "openapi": "3.0.1",
    "info": {
        "version": "1.0.0",
        "title": "Connections API",
        "contact": {
            "name": "SlimMom",
            "url": "https://codajoker.github.io/final_project_react_node_frontend/"
        }
    },
    "consumes": [
        "application/json"
    ],
    "produces": [
        "application/json"
    ],
    "servers": [
        {
            "url": "https://sheltered-fjord-67703.herokuapp.com",
            "description": "Herokuapp server"
        }
    ],
    "tags": [
        {
            "name": "User",
            "description": "Users endpoints"
        }
    ],
    "paths": {
        "/users/register": {
            "post": {
                "tags": [
                    "User"
                ],
                "summary": "Register new user",
                "parameters": [],
                "security": [
                    {
                        "Bearer": []
                    }
                ],
                "requestBody": {
                    "description": "Registration's object",
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/RegistrationRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "User created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/RegistrationResponse"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Not found"
                    },
                    "500": {
                        "description": "User already exists"
                    }
                }
            }
        }
    },
    "components": {
        "schemas": {
            "RegistrationRequest": {
                "type": "object",
                "required": [
                    "name",
                    "email",
                    "password"
                ],
                "properties": {
                    "id": {
                        "type": "string",
                        "description": "Backend-generated unique identifier"
                    },
                    "name": {
                        "type": "string",
                        "description": "User name"
                    },
                    "email": {
                        "type": "string",
                        "format": "email",
                        "description": "User's email"
                    },
                    "password": {
                        "type": "string",
                        "description": "User's password",
                        "minLength": 6
                    }
                },
                "example": {
                    "name": "Olala",
                    "email": "ola@example.com",
                    "password": "123456"
                }
            },
            "RegistrationResponse": {
                "type": "object",
                "properties": {
                    "status": {
                        "type": "string",
                        "description": "Success",
                        "example": "success"
                    },
                    "code": {
                        "type": "number",
                        "description": "200",
                        "example": 200
                    },
                    "data": {
                        "type": "object",
                        "properties": {
                            "message": {
                                "type": "string",
                                "description": "User created successfully",
                                "example": "User created successfully"
                            }
                        }
                    }
                }
            },
            "User": {
                "type": "object",
                "properties": {
                    "id": {
                        "type": "string"
                    },
                    "name": {
                        "type": "string"
                    },
                    "email": {
                        "type": "string"
                    },
                    "password": {
                        "type": "string"
                    },
                    "createdAt": {
                        "type": "string",
                        "format": "date-time"
                    },
                    "updatedAt": {
                        "type": "string",
                        "format": "date-time"
                    }
                }
            },
            "UserList": {
                "type": "object",
                "properties": {
                    "users": {
                        "type": "array",
                        "items": {
                            "$ref": "#/components/schemas/User"
                        }
                    }
                }
            }
        },
        "securitySchemes": {
            "BearerAuth": {
                "type": "http",
                "description": "JWT Authorization header using the Bearer scheme. Example: \"Authorization: Bearer {token}\"",
                "scheme": "bearer",
                "bearerFormat": "JWT"
            }
        }
    }
}